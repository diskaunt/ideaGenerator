{"version":3,"file":"index-BrICITQ7.js","sources":["../../generationsData.js","../../helpers.js","../../script.js"],"sourcesContent":["const generationsData = [\r\n  {\r\n    recipient: 'Коллеги',\r\n    complexity: 'Лёгкий',\r\n    mood: 'Вдохновить',\r\n    title: 'Рабочий нейрогороскоп',\r\n    description:\r\n      'Сгенерируйте коллегам предсказания на&nbsp;следующий год. Если звёзды напророчат кому-то новые возможности, добавьте в&nbsp;послание промокод от&nbsp;Яндекс Практикума. Так ваш праздничный прогноз превратится в&nbsp;новые навыки или даже целую профессию.',\r\n    actions:\r\n      'Расскажите YandexGPT о&nbsp;коллегах и&nbsp;попросите её&nbsp;написать новогодние поздравления в&nbsp;стиле гороскопа. Чтобы предсказания получились интереснее, задайте в&nbsp;промте роль для нейросети (например, &laquo;представь, что ты&nbsp;астролог с&nbsp;десятилетним стажем&raquo;) и&nbsp;добавьте побольше деталей.',\r\n  },\r\n  {\r\n    recipient: 'Коллеги',\r\n    complexity: 'Сложный',\r\n    mood: 'Вдохновить',\r\n    title: 'Церемония «Коллега года»',\r\n    description:\r\n      'Сделайте презентацию с&nbsp;итогами года и&nbsp;почётными грамотами для каждого. Если в&nbsp;офис по&nbsp;сугробам добираться никто не&nbsp;хочет, церемонию можно провести онлайн и&nbsp;отправить курьера. Закажите доставку от&nbsp;Яндекс Go&nbsp;прямо перед звонком, чтобы грамоты приезжали коллегам во&nbsp;время встречи.',\r\n    actions:\r\n      'Расскажите факты о&nbsp;коллегах YandexGPT&nbsp;&mdash; она поможет составить текст. Необязательно вспоминать серьёзные достижения: подойдёт самое большое количество шуток или съеденных печений. Презентацию может сгенерировать сервис Presentsimple. Загрузите документ с&nbsp;информацией: нейросеть подберёт дизайн и&nbsp;картинки, а&nbsp;вы&nbsp;отредактируете слайды так, как вам нравится.',\r\n  },\r\n  {\r\n    recipient: 'Друзья',\r\n    complexity: 'Лёгкий',\r\n    mood: 'Рассмешить',\r\n    title: 'Инструкция по эксплуатации друга',\r\n    description:\r\n      'У&nbsp;вас есть друг, который никогда не&nbsp;берёт трубку? Или не&nbsp;любит пиццу с&nbsp;ананасами? Напишите к&nbsp;нему инструкцию&nbsp;&mdash; облегчите жизнь себе и&nbsp;другим. А&nbsp;заодно сделаете первый подарок, который можно и&nbsp;нужно передаривать.',\r\n    actions:\r\n      'Вспомните особенности друга, загрузите их&nbsp;в&nbsp;YandexGPT и&nbsp;попросите нейросеть написать текст в&nbsp;стиле, к&nbsp;примеру, инструкции к&nbsp;стиральной машинке. Добавьте иллюстрации, где ваш друг изображён в&nbsp;виде схемы. Это можно сделать с&nbsp;помощью нейросети или вручную&nbsp;&mdash; в&nbsp;простом редакторе типа Bazaart.',\r\n  },\r\n  {\r\n    recipient: 'Друзья',\r\n    complexity: 'Сложный',\r\n    mood: 'Рассмешить',\r\n    title: 'Выдуманный фотоальбом»',\r\n    description:\r\n      'Соберите известные фотографии и&nbsp;вставьте в&nbsp;них лица своих друзей. Будет весело посмотреть на&nbsp;них на&nbsp;Луне, на&nbsp;Ялтинской конференции или на&nbsp;картине Ван Гога&nbsp;&mdash; можно собрать целый альбом.',\r\n    actions:\r\n      'Главное&nbsp;&mdash; ракурс. Смело экспериментируйте с&nbsp;фотографиями и&nbsp;нейросетями (вам пригодится, например, TurboText или Artguru AI). Если вы&nbsp;претендуете на&nbsp;звание &laquo;Король приколов&raquo;&nbsp;&mdash; вставляйте лица в&nbsp;видеомемы, отрывки сериалов и&nbsp;фильмов. Такое можно провернуть с&nbsp;помощью Faceswap и&nbsp;подобных нейросетей.',\r\n  },\r\n  {\r\n    recipient: 'Семья',\r\n    complexity: 'Лёгкий',\r\n    mood: 'Помочь',\r\n    title: 'Реставрация старых фотографий',\r\n    description:\r\n      'Сделайте чёрно-белые архивные снимки вашей семьи цветными и&nbsp;соберите их&nbsp;в&nbsp;альбом&nbsp;&mdash; чтобы листать его за&nbsp;вечерним чаем и&nbsp;спорить, у&nbsp;кого&nbsp;же всё-таки прадедушкины глаза.',\r\n    actions:\r\n      'Сервисов, которые покрасят чёрно-белые фото, много&nbsp;&mdash; выбирайте на&nbsp;свой вкус. Есть, например, ИИ-редакторы Hotspot и&nbsp;Neural.love. С&nbsp;первого раза может получиться неидеально&nbsp;&mdash; пригодится капелька терпения, как и&nbsp;в&nbsp;любых семейных делах.',\r\n  },\r\n  {\r\n    recipient: 'Семья',\r\n    complexity: 'Сложный',\r\n    mood: 'Помочь',\r\n    title: 'Урок цифровой грамотности',\r\n    description:\r\n      'Сделайте чёрно-белые архивные снимки вашей семьи цветными и&nbsp;соберите их&nbsp;в&nbsp;альбом&nbsp;&mdash; чтобы листать его за&nbsp;вечерним чаем и&nbsp;спорить, у&nbsp;кого&nbsp;же всё-таки прадедушкины глаза.',\r\n    actions:\r\n      'Подумайте, что пригодится вашим близким. Может, бабушке не&nbsp;нужен онлайн-банк, но&nbsp;поможет приложение со&nbsp;скидками на&nbsp;продукты? Соберите пошаговый гайд со&nbsp;скриншотами.<br/>А&nbsp;ещё его можно распечатать и&nbsp;провести &laquo;живой урок&raquo;&nbsp;&mdash; ещё одна идея совместного времяпрепровождения.',\r\n  },\r\n  {\r\n    recipient: 'Партнёр',\r\n    complexity: 'Лёгкий',\r\n    mood: 'Помочь',\r\n    title: 'Маршрут для следующего путешествия',\r\n    description:\r\n      'Составьте план вашего совместного приключения с&nbsp;помощью нейросети. Она сможет учесть интересы обоих, предложить небанальные достопримечательности, рассчитать бюджет и&nbsp;посоветовать, как удобнее всего добраться до&nbsp;нужных мест.',\r\n    actions:\r\n      'Соберите все пожелания в&nbsp;промт и&nbsp;отдайте, например, YandexGPT&nbsp;&mdash; пусть думает. Чтобы побольше ходить, но&nbsp;успеть хорошенько полежать, чтобы к&nbsp;морю, но&nbsp;чтобы и&nbsp;горы тоже были, чтобы посетить все достопримечательности, но&nbsp;не&nbsp;забыть и&nbsp;про рестораны, и&nbsp;всё это за&nbsp;выходные... Удачи тебе, дорогая нейросеть!',\r\n  },\r\n  {\r\n    recipient: 'Партнёр',\r\n    complexity: 'Сложный',\r\n    mood: 'Помочь',\r\n    title: 'Генератор ужинов',\r\n    description:\r\n      'Со&nbsp;временем вопрос &laquo;что приготовить на&nbsp;ужин&raquo; может вызывать не&nbsp;вдохновение, а&nbsp;усталость. Обратитесь к&nbsp;нейросетям: они помогут составить меню как в&nbsp;ресторане, только с&nbsp;теми блюдами, которые нравятся вам обоим. А&nbsp;если готовить совсем не&nbsp;хочется, всегда можно заказать Яндекс Еду&nbsp;&mdash; там найдётся кухня на&nbsp;любой вкус и&nbsp;настроение.',\r\n    actions:\r\n      'Расскажите YandexGPT про предпочтения вашей пары, а&nbsp;она соберёт подходящие рецепты. Можете попросить разделить их&nbsp;на&nbsp;группы по&nbsp;настроению (например, &laquo;Быстро приготовить&raquo;, &laquo;Попробовать новое&raquo;, &laquo;Любимая классика&raquo;), чтобы получилось настоящее меню. В&nbsp;день&nbsp;Х вам останется только определиться с&nbsp;пожеланиями и&nbsp;выбрать понравившееся блюдо.',\r\n  },\r\n];\r\n\r\nexport default generationsData;\r\n","// Функция для получения случайного числа от 0 до max\r\nexport function getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\n// Функция для добавления текста к кнопке настроения\r\nexport function addTextToElement(button, newText) {\r\n  // Создаём новый span для активной кнопки\r\n  const span = document.createElement('span');\r\n  span.style.textAlign = 'center';\r\n  span.style.width = '100%';\r\n  span.style.overflow = 'hidden';\r\n  span.textContent = newText;\r\n  button.appendChild(span);\r\n}\r\n\r\nexport function changeTextElement(element, newText) {\r\n  if (Boolean(newText)) {\r\n    element.innerHTML = newText;\r\n  }\r\n}\r\n\r\n// Функция для \"прилипания\" к краям\r\nexport function snapToEdge(button, text, newCoord, maxCoord, isHorizontal) {\r\n  if (isHorizontal) {\r\n    const boxShadowMin = '0 -24px 12px #ABF59B';\r\n    const boxShadowMax = '0 -24px 12px #B965FF';\r\n    if (newCoord > maxCoord / 2) {\r\n      button.style.left = maxCoord + 'px';\r\n      button.style.boxShadow = boxShadowMax;\r\n      text.textContent = 'max';\r\n      button.dataset.base = 'Сложный';\r\n    } else {\r\n      button.style.left = '0px';\r\n      button.style.boxShadow = boxShadowMin;\r\n      text.textContent = 'min';\r\n      button.dataset.base = 'Лёгкий';\r\n    }\r\n  } else {\r\n    const boxShadowMin = '0 -12px 12px #ABF59B';\r\n    const boxShadowMax = '0 -12px 12px #B965FF';\r\n    if (newCoord < maxCoord / 2) {\r\n      button.style.top = '0px';\r\n      button.style.boxShadow = boxShadowMax;\r\n      text.textContent = 'max';\r\n      button.dataset.base = 'Сложный';\r\n    } else {\r\n      button.style.top = maxCoord + 'px';\r\n      button.style.boxShadow = boxShadowMin;\r\n      text.textContent = 'min';\r\n      button.dataset.base = 'Лёгкий';\r\n    }\r\n  }\r\n\r\n  // Проверяем изменения параметров после изменения сложности\r\n  // Создаем событие для уведомления об изменении сложности\r\n  // const changeEvent = new CustomEvent('difficultyChanged');\r\n  // document.dispatchEvent(changeEvent);\r\n}\r\n\r\n// функция изменяющая текст в окне в зависимости от выбранного человека\r\nexport function rectangleRecipeChanger(newText) {\r\n  const recipientRectagleText = document.querySelector(\r\n    '.generator__recipient-rectangle-text'\r\n  );\r\n  if (recipientRectagleText) {\r\n    switch (newText) {\r\n      case 'Коллеги':\r\n        recipientRectagleText.innerHTML = 'Сканируем офисные будни|';\r\n        break;\r\n      case 'Партнер':\r\n        recipientRectagleText.innerHTML = 'Запущена программа ROMANTIKA|';\r\n        break;\r\n      case 'Семья':\r\n        recipientRectagleText.innerHTML = 'Уровень тепла настроен на 100%|';\r\n        break;\r\n      case 'Друзья':\r\n        recipientRectagleText.innerHTML = 'Анализируем весёлые воспоминания|';\r\n        break;\r\n      default:\r\n        recipientRectagleText.innerHTML = '...|';\r\n    }\r\n\r\n    printText(recipientRectagleText, 50);\r\n  }\r\n}\r\n\r\n// функция имитирующая печатную машинку\r\nexport function printText(el, timeout) {\r\n  // Останавливаем предыдущую анимацию если она есть\r\n  if (el.printTimeout) {\r\n    clearTimeout(el.printTimeout);\r\n  }\r\n\r\n  let letterTimeout = timeout;\r\n  let text = el.innerHTML;\r\n  let i = 1;\r\n\r\n  print__fn(); // init\r\n\r\n  function print__fn() {\r\n    if (i <= text.length) {\r\n      el.innerHTML = text.substr(0, i);\r\n      // Сохраняем timeout ID для возможности остановки\r\n      el.printTimeout = setTimeout(print__fn, letterTimeout);\r\n    }\r\n    i++;\r\n  }\r\n}\r\n\r\n// Функция для переключения активного состояния кнопок\r\nexport function toggleActiveButton(clickedButton, buttonSelector, activeClass) {\r\n  // Убираем активный класс у всех кнопок этого типа\r\n  document.querySelectorAll(buttonSelector).forEach((button) => {\r\n    button.classList.remove(activeClass);\r\n  });\r\n\r\n  // Добавляем активный класс к нажатой кнопке\r\n  clickedButton.classList.add(activeClass);\r\n}\r\n\r\n// Функция для получения текущих выбранных параметров\r\nexport function getCurrentOptions() {\r\n  const recipient = document.querySelector(\r\n    '.generator__recipient-button--active'\r\n  );\r\n  const difficulty = document.querySelector('.generator__difficulty-button');\r\n  const color = document.querySelector('.generator__color-button--active');\r\n  const mood = document.querySelector('.generator__mood-button--active');\r\n\r\n  return {\r\n    recipient: recipient ? recipient.dataset.base : null,\r\n    complexity: difficulty ? difficulty.dataset.base : null,\r\n    color: color ? color.dataset.base : null,\r\n    mood: mood ? mood.dataset.base : null,\r\n  };\r\n}\r\n","'use strict';\r\nimport generationsData from './generationsData.js';\r\nimport {\r\n  getRandomInt,\r\n  addTextToElement,\r\n  toggleActiveButton,\r\n  rectangleRecipeChanger,\r\n  printText,\r\n  snapToEdge,\r\n  changeTextElement,\r\n  getCurrentOptions,\r\n} from './helpers.js';\r\n\r\n// Получаем все элементы\r\nconst moodButtons = document.querySelectorAll('.generator__mood-button');\r\nconst recipientButtons = document.querySelectorAll(\r\n  '.generator__recipient-button'\r\n);\r\nconst colorButtons = document.querySelectorAll('.generator__color-button');\r\nconst difficultyTrack = document.querySelector('.generator__difficulty-track');\r\nconst difficultyButton = document.querySelector(\r\n  '.generator__difficulty-button'\r\n);\r\nconst difficultyText = document.querySelector('.generator__difficulty-text');\r\n\r\nlet newShare = {}; // Выносим в глобальную область видимости\r\nlet isSubmitDisabled = false; // Флаг для отслеживания состояния кнопки submit\r\nlet lastSelectedOptions = {}; // Для отслеживания изменений параметров\r\n\r\n// Обработчик кликов по документу\r\ndocument.addEventListener('click', (event) => {\r\n  const target = event.target;\r\n\r\n  // Обработка кнопок получателя\r\n  if (target.classList.contains('generator__recipient-button')) {\r\n    toggleActiveButton(\r\n      target,\r\n      '.generator__recipient-button',\r\n      'generator__recipient-button--active'\r\n    );\r\n    rectangleRecipeChanger(target.textContent);\r\n    checkOptionsChanged();\r\n  }\r\n\r\n  // Обработака кнопки выбора сложности\r\n  if (\r\n    target.classList.contains('generator__difficulty-button') ||\r\n    target.closest('.generator__difficulty-button')\r\n  ) {\r\n    checkOptionsChanged();\r\n  }\r\n\r\n  // Обработка кнопок настроения\r\n  if (\r\n    target.classList.contains('generator__mood-button') ||\r\n    target.closest('.generator__mood-button')\r\n  ) {\r\n    const moodButton = target.classList.contains('generator__mood-button')\r\n      ? target\r\n      : target.closest('.generator__mood-button');\r\n\r\n    toggleActiveButton(\r\n      moodButton,\r\n      '.generator__mood-button',\r\n      'generator__mood-button--active'\r\n    );\r\n    moodButtons.forEach((button) => {\r\n      const span = button.querySelector('span');\r\n      if (span) {\r\n        span.remove();\r\n      }\r\n    });\r\n    addTextToElement(moodButton, moodButton.getAttribute('data-text'));\r\n    checkOptionsChanged();\r\n  }\r\n\r\n  // Обработка кнопок цвета\r\n  if (target.classList.contains('generator__color-button')) {\r\n    toggleActiveButton(\r\n      target,\r\n      '.generator__color-button',\r\n      'generator__color-button--active'\r\n    );\r\n    checkOptionsChanged();\r\n  }\r\n\r\n  // Обработка кнопки сабмита\r\n  if (target.classList.contains('generator__submit')) {\r\n    const recipient = document.querySelector(\r\n      '.generator__recipient-button--active'\r\n    );\r\n    const difficulty = document.querySelector('.generator__difficulty-button');\r\n    const color = document.querySelector('.generator__color-button--active');\r\n    const mood = document.querySelector('.generator__mood-button--active');\r\n    const submitButton = document.querySelector('.generator__submit');\r\n\r\n    // создаем и заполняем обьект данными\r\n    const forFind = {\r\n      recipient: recipient.dataset.base,\r\n      complexity: difficulty.dataset.base,\r\n      mood: mood.dataset.base,\r\n    };\r\n    // Находим нужный нам обьект в массиве данных\r\n    newShare =\r\n      generationsData.find((item) => {\r\n        return (\r\n          item.recipient === forFind.recipient &&\r\n          item.complexity === forFind.complexity &&\r\n          item.mood === forFind.mood\r\n        );\r\n      }) || generationsData[0];\r\n\r\n    // Изменяем текст в элементах на нужный\r\n    changeTextElement(\r\n      document.querySelector('.generator__share-title'),\r\n      newShare.title\r\n    );\r\n    changeTextElement(\r\n      document.querySelector('.generator__share-text'),\r\n      newShare.description\r\n    );\r\n\r\n    // Устанавливаем фоновое изображение в зависимости от выбранного цвета\r\n    const share = document.querySelector('.generator__share');\r\n    const colorName = color.dataset.base;\r\n\r\n    share.classList.remove(`generator__share--${lastSelectedOptions.color}`);\r\n    share.classList.add(`generator__share--${colorName}`);\r\n\r\n    // Делаем видимыми данные\r\n    document\r\n      .querySelector('.generator__share-content')\r\n      .classList.add('generator__share-content--visible');\r\n    document\r\n      .querySelector('.generator__share-popup')\r\n      .classList.add('generator__share-popup--visible');\r\n\r\n    // Делаем кнопку сабмита неактивной и меняем текст\r\n    lastSelectedOptions = { ...getCurrentOptions() };\r\n    checkOptionsChanged();\r\n  }\r\n\r\n  // Обработчик кнопки переключения \"как сделать\" и \"вернуться к идее\"\r\n  if (target.classList.contains('generator__share-button')) {\r\n    const button = document.querySelector('.generator__share-button');\r\n    const title = document.querySelector('.generator__share-title');\r\n    const content = document.querySelector('.generator__share-text');\r\n\r\n    if (button.dataset.base === 'description') {\r\n      changeTextElement(title, 'Как сделать?');\r\n      changeTextElement(content, newShare.actions);\r\n      changeTextElement(button, 'Вернуться к идее');\r\n      button.dataset.base = 'actions';\r\n    } else {\r\n      changeTextElement(title, newShare.title);\r\n      changeTextElement(content, newShare.description);\r\n      changeTextElement(button, 'Как сделать');\r\n      button.dataset.base = 'description';\r\n    }\r\n  }\r\n});\r\n\r\n// Функция drag & drop для ползунка\r\nexport function dragButton(track, button, text) {\r\n  let trackRect = track.getBoundingClientRect();\r\n  let isHorizontal = trackRect.width >= trackRect.height; // смотрим в какой сейчас плоскости наш элемент\r\n  let minCoord = 0;\r\n  let maxCoord = isHorizontal\r\n    ? trackRect.width - button.offsetWidth\r\n    : trackRect.height - button.offsetHeight;\r\n\r\n  let isDragging = false; // Преременная по который мы понимаем что кнопка нажата нужном элементе\r\n  let shift = 0; // Переменная учитывающая место нажатия на самой кнопке\r\n  let newCoord = 0; // Новые координаты\r\n\r\n  // обновляем данные позиционированная элекмента и макс координаты по оси\r\n  function updateTrackRect() {\r\n    trackRect = track.getBoundingClientRect();\r\n    isHorizontal = trackRect.width >= trackRect.height;\r\n    maxCoord = isHorizontal\r\n      ? trackRect.width - button.offsetWidth\r\n      : trackRect.height - button.offsetHeight;\r\n  }\r\n\r\n  // Сбросываем к min или max при ресайзе\r\n  window.addEventListener('resize', () => {\r\n    updateTrackRect();\r\n    if (text.textContent === 'min') {\r\n      if (isHorizontal) {\r\n        button.style.left = '0px';\r\n        button.style.top = '';\r\n      } else {\r\n        button.style.top = maxCoord + 'px';\r\n        button.style.left = '';\r\n      }\r\n    } else {\r\n      if (isHorizontal) {\r\n        button.style.left = maxCoord + 'px';\r\n        button.style.top = '';\r\n      } else {\r\n        button.style.top = '0px';\r\n        button.style.left = '';\r\n      }\r\n    }\r\n  });\r\n\r\n  // Обрабатываем собитие мыши при нажатии\r\n  if (button && track) {\r\n    button.addEventListener('mousedown', (event) => {\r\n      button.style.transition = '';\r\n      event.preventDefault();\r\n      isDragging = true;\r\n      const buttonRect = button.getBoundingClientRect();\r\n      shift = isHorizontal\r\n        ? event.clientX - buttonRect.left\r\n        : event.clientY - buttonRect.top;\r\n      document.body.style.userSelect = 'none';\r\n    });\r\n\r\n    // Обрабатываем событие мыши при движении\r\n    document.addEventListener('mousemove', (event) => {\r\n      event.preventDefault();\r\n\r\n      if (!isDragging) return;\r\n\r\n      newCoord = isHorizontal\r\n        ? event.clientX - trackRect.left - shift\r\n        : event.clientY - trackRect.top - shift;\r\n\r\n      // Выбираем новую координату с учетом максмальной и минимальной\r\n      newCoord = Math.max(minCoord, Math.min(newCoord, maxCoord));\r\n      if (isHorizontal) {\r\n        const boxShadowMin = '0 -24px 12px #ABF59B';\r\n        const boxShadowMax = '0 -24px 12px #B965FF';\r\n        button.style.left = newCoord + 'px';\r\n        if (newCoord > maxCoord / 2) {\r\n          button.style.boxShadow = boxShadowMax;\r\n        } else {\r\n          button.style.boxShadow = boxShadowMin;\r\n        }\r\n      } else {\r\n        const boxShadowMin = '0 -12px 12px #ABF59B';\r\n        const boxShadowMax = '0 -12px 12px #B965FF';\r\n        button.style.top = newCoord + 'px';\r\n        if (newCoord > maxCoord / 2) {\r\n          button.style.boxShadow = boxShadowMin;\r\n        } else {\r\n          button.style.boxShadow = boxShadowMax;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Обрабатываем событие мыши при отпускании кнопки мыши\r\n    document.addEventListener('mouseup', (e) => {\r\n      if (isDragging) {\r\n        isDragging = false;\r\n        document.body.style.userSelect = '';\r\n        button.style.transition =\r\n          (isHorizontal ? 'left' : 'top') + ' ease-in-out 0.3s';\r\n\r\n        // \"Прилипание\" к ближайшему краю при отпускании кнопки\r\n        snapToEdge(button, text, newCoord, maxCoord, isHorizontal);\r\n      }\r\n    });\r\n\r\n    // Для мобильных устройств (touch events)\r\n    button.addEventListener('touchstart', (event) => {\r\n      button.style.transition = '';\r\n      event.preventDefault();\r\n      isDragging = true;\r\n      const buttonRect = button.getBoundingClientRect();\r\n      shift = isHorizontal\r\n        ? event.touches[0].clientX - buttonRect.left\r\n        : event.touches[0].clientY - buttonRect.top;\r\n      document.body.style.userSelect = 'none';\r\n    });\r\n\r\n    document.addEventListener('touchmove', (event) => {\r\n      event.preventDefault();\r\n      if (!isDragging) return;\r\n      let newCoord = isHorizontal\r\n        ? event.touches[0].clientX - trackRect.left - shift\r\n        : event.touches[0].clientY - trackRect.top - shift;\r\n      newCoord = Math.max(minCoord, Math.min(newCoord, maxCoord));\r\n      if (isHorizontal) {\r\n        button.style.left = newCoord + 'px';\r\n      } else {\r\n        button.style.top = newCoord + 'px';\r\n      }\r\n    });\r\n\r\n    document.addEventListener('touchend', () => {\r\n      if (isDragging) {\r\n        isDragging = false;\r\n        document.body.style.userSelect = '';\r\n        button.style.transition =\r\n          (isHorizontal ? 'left' : 'top') + ' ease-in-out 0.3s';\r\n        snapToEdge(button, text, newCoord, maxCoord, isHorizontal);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Инициализация: устанавливаем случайные активные кнопки, если их нет\r\nfunction initializeRandomButtons() {\r\n  // Для кнопок получателя\r\n  const activeRecipientButton = document.querySelector(\r\n    '.generator__recipient-button--active'\r\n  );\r\n  if (!activeRecipientButton && recipientButtons.length > 0) {\r\n    const randomRecipientButton =\r\n      recipientButtons[getRandomInt(recipientButtons.length)];\r\n    randomRecipientButton.classList.add('generator__recipient-button--active');\r\n\r\n    rectangleRecipeChanger(randomRecipientButton.textContent);\r\n  }\r\n\r\n  // Для кнопок настроения\r\n  const activeMoodButton = document.querySelector(\r\n    '.generator__mood-button--active'\r\n  );\r\n  if (!activeMoodButton && moodButtons.length > 0) {\r\n    const randomMoodButton = moodButtons[getRandomInt(moodButtons.length)];\r\n    randomMoodButton.classList.add('generator__mood-button--active');\r\n    addTextToElement(\r\n      randomMoodButton,\r\n      randomMoodButton.getAttribute('data-text')\r\n    );\r\n  }\r\n\r\n  // Для ползунка сложности\r\n  const difficultyText = document.querySelector('.generator__difficulty-text');\r\n  let base = difficultyButton.dataset.base;\r\n  let newCoord = null;\r\n  if (base === '') {\r\n    base = getRandomInt(2) > 0 ? 'Лёгкий' : 'Сложный';\r\n    const isHorizontal =\r\n      difficultyTrack.offsetWidth >= difficultyTrack.offsetHeight;\r\n    const maxCoord = isHorizontal\r\n      ? difficultyTrack.offsetWidth - difficultyButton.offsetWidth\r\n      : difficultyTrack.offsetHeight - difficultyButton.offsetHeight;\r\n    if (isHorizontal) {\r\n      newCoord = base === 'Лёгкий' ? 0 : maxCoord;\r\n    } else {\r\n      newCoord = base === 'Лёгкий' ? maxCoord : 0;\r\n    }\r\n    snapToEdge(\r\n      difficultyButton,\r\n      difficultyText,\r\n      newCoord,\r\n      maxCoord,\r\n      isHorizontal\r\n    );\r\n  }\r\n\r\n  // Для кнопок цвета\r\n  const activeColorButton = document.querySelector(\r\n    '.generator__color-button--active'\r\n  );\r\n  if (!activeColorButton && colorButtons.length > 0) {\r\n    const randomColorButton = colorButtons[getRandomInt(colorButtons.length)];\r\n    randomColorButton.classList.add('generator__color-button--active');\r\n  }\r\n\r\n  // Инициализируем lastSelectedOptions после установки всех параметров\r\n  lastSelectedOptions = getCurrentOptions();\r\n}\r\n\r\n// Функция для проверки изменений параметров\r\nexport function checkOptionsChanged() {\r\n  const submitButton = document.querySelector('.generator__submit');\r\n  const currentOptions = getCurrentOptions();\r\n  const hasChanged =\r\n    JSON.stringify(currentOptions) !== JSON.stringify(lastSelectedOptions);\r\n\r\n  if (hasChanged) {\r\n    // Если параметры изменились, делаем её активной\r\n    submitButton.disabled = false;\r\n    submitButton.textContent = 'Получить идею';\r\n    isSubmitDisabled = false;\r\n  } else {\r\n    // Если параметры не изменились, делаем её не активной\r\n    submitButton.disabled = true;\r\n    submitButton.textContent = 'Поменяйте что-то в фильтрах';\r\n    isSubmitDisabled = true;\r\n  }\r\n}\r\n\r\ndragButton(difficultyTrack, difficultyButton, difficultyText);\r\n\r\n// Запускаем инициализацию после загрузки DOM\r\ndocument.addEventListener('DOMContentLoaded', initializeRandomButtons);\r\n"],"names":["generationsData","getRandomInt","max","addTextToElement","button","newText","span","changeTextElement","element","snapToEdge","text","newCoord","maxCoord","isHorizontal","boxShadowMin","boxShadowMax","rectangleRecipeChanger","recipientRectagleText","printText","el","timeout","letterTimeout","i","print__fn","toggleActiveButton","clickedButton","buttonSelector","activeClass","getCurrentOptions","recipient","difficulty","color","mood","moodButtons","recipientButtons","colorButtons","difficultyTrack","difficultyButton","difficultyText","newShare","lastSelectedOptions","event","target","checkOptionsChanged","moodButton","forFind","item","share","colorName","title","content","dragButton","track","trackRect","minCoord","isDragging","shift","updateTrackRect","buttonRect","e","initializeRandomButtons","randomRecipientButton","randomMoodButton","base","submitButton","currentOptions"],"mappings":"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"}